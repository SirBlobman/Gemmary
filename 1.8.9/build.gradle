buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
	}
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "Beta 0.0.1.5"
group = "com.SirBlobman.gemmary" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "gemmary"

if (System.getenv().BUILD_NUMBER != null) {//adds the build number to the end of the version string if on a build server
	version += ".${System.getenv().BUILD_NUMBER}"
}

// java version
sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {
	version = "1.8.9-11.15.0.1669"
	runDir = "run"
	mappings = "stable_20"
}

repositories {

}

dependencies {

}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version': project.version, 'mcversion': project.minecraft.version
	}

	// copy everything else, that's not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}

	// Move access transformers to META-INF
	//rename '(.+_at.cfg)', 'META-INF/$1'
}

// prevent java 8's strict doclint for javadocs from failing builds
allprojects {
	tasks.withType(Javadoc) {
		options.addStringOption('Xdoclint:none', '-quiet')
	}
}

jar {
	manifest {
		attributes 'FMLAT': 'jei_at.cfg'
	}
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	from javadoc.destinationDir
	classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	classifier = 'sources'
}

artifacts {
	archives javadocJar
	archives sourcesJar
}

task("uploadJars", dependsOn: "build") {
	description = "uploads JARs"
	if (project.hasProperty("local_maven")) {
		apply plugin: 'maven'
		uploadArchives {
			repositories {
				mavenDeployer {
					repository(url: "file://${local_maven}")
				}
			}
		}
	}
}

sourceSets {
    main {
        java { srcDirs = ["$projectDir/src/java"] }
        resources { srcDirs = ["$projectDir/src/resources"] }
    }
}